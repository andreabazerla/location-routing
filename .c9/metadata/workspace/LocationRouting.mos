{"changed":true,"filter":false,"title":"LocationRouting.mos","tooltip":"/LocationRouting.mos","value":"model \"Location Routing\"\n\tuses \"mmxprs\"!, \"mmive\"\n\n  \tversion 1.0.0\n\n  \tsetparam(\"XPRS_VERBOSE\", true)\n\n\t!forward procedure draw_locations\n  \t!forward procedure draw_customers\n\n  \tdeclarations\n    \tlocations_number: integer\n    \tcustomers_number: integer\n    \tpoints_number: integer\n    \tdepots_capacity: integer\n    end-declarations\n\n    locations_number := 5\n  \tcustomers_number := 15\n  \tpoints_number := locations_number + customers_number\n  \tdepots_capacity := 10\n\n\tdeclarations\n\t\tLOCATIONS_NUMBER = 1..locations_number\n\t\tLOCATION_X, LOCATION_Y, LOCATION_COST: array(LOCATIONS_NUMBER) of integer\n\t\tLOCATIONS: array(LOCATIONS_NUMBER) of array(1..3) of integer\n\n\t\tCUSTOMERS_NUMBER = 1..customers_number\n\t\tCUSTOMER_X, CUSTOMER_Y, CUSTOMER_DEMAND : array(CUSTOMERS_NUMBER) of integer\n\t\tCUSTOMERS: array(CUSTOMERS_NUMBER) of array(1..3) of integer\n\n\t\tPOINTS_NUMBER = 1..points_number\n\t\tPOINTS: array(POINTS_NUMBER) of array(1..3) of integer\n\n\t\tbuild_depot : array(LOCATIONS_NUMBER) of mpvar\n\n\t\tROUTES_NUMBER = 1..locations_number\n\n\t\tDISTANCE : array(POINTS_NUMBER, POINTS_NUMBER) of real\n\t\ttake_customer : array(POINTS_NUMBER, POINTS_NUMBER, ROUTES_NUMBER) of mpvar\n\n\t\tCost : linctr\n\tend-declarations\n\n\tforall(i in LOCATIONS_NUMBER) build_depot(i) is_binary\n\tforall(i in POINTS_NUMBER, j in POINTS_NUMBER, k in ROUTES_NUMBER) take_customer(i,j,k) is_binary\n\n  \tinitializations from \"data.dat\"\n\t\t[LOCATION_X, LOCATION_Y, LOCATION_COST] as 'LOCATIONS'\n\t\t[CUSTOMER_X, CUSTOMER_Y, CUSTOMER_DEMAND] as 'CUSTOMERS'\n  \tend-initializations\n\n  \tforall(i in LOCATIONS_NUMBER) do\n\t\tLOCATIONS(i,1) := LOCATION_X(i)\n\t\tLOCATIONS(i,2) := LOCATION_Y(i)\n\t\tLOCATIONS(i,3) := LOCATION_COST(i)\n  \tend-do\n\n  \tforall(i in CUSTOMERS_NUMBER) do\n\t\tCUSTOMERS(i,1) := CUSTOMER_X(i)\n\t\tCUSTOMERS(i,2) := CUSTOMER_Y(i)\n\t\tCUSTOMERS(i,3) := CUSTOMER_DEMAND(i)\n\tend-do\n\n\tcontatore := 0\n\tforall(i in LOCATIONS_NUMBER) do\n\t\tPOINTS(i,1) := LOCATION_X(i)\n\t\tPOINTS(i,2) := LOCATION_Y(i)\n\t\tPOINTS(i,3) := LOCATION_COST(i)\n\t\tcontatore := i\n\tend-do\n\n\tforall(i in CUSTOMERS_NUMBER) do\n\t\tPOINTS(contatore+i,1) := CUSTOMER_X(i)\n\t\tPOINTS(contatore+i,2) := CUSTOMER_Y(i)\n\t\tPOINTS(contatore+i,3) := CUSTOMER_DEMAND(i)\n\tend-do\n\n\twriteln(LOCATIONS)\n\twriteln(CUSTOMERS)\n\twriteln(POINTS)\n\n\tforall(i in POINTS_NUMBER) do\n\t\tforall(j in POINTS_NUMBER) do\n\t\t\tDISTANCE(i,j) := sqrt((POINTS(j,1)-POINTS(i,1))^2 + (POINTS(j,2)-POINTS(i,2))^2)\n\t\t\twrite(strfmt(DISTANCE(i,j), 2, 2), \"\\t\")\n\t\tend-do\n\t\twrite(\"\\n\")\n\tend-do\n\n!VINCOLI DEL MODELLO-----------------------------------------------------------\n\n\t! Ogni cliente appartiene ad una e una sola route\n\tforall(j in CUSTOMERS_NUMBER)\n\t\tsum(i in POINTS_NUMBER, k in ROUTES_NUMBER) take_customer(i,j,k) = 1\n\n\t! La domanda totale dei clienti di una route deve essere minore o uguale alla capacità del magazzino da cui parte\n\tforall(k in ROUTES_NUMBER)\n\t\tsum(i in POINTS_NUMBER, j in CUSTOMERS_NUMBER) CUSTOMER_DEMAND(j) * take_customer(i,j,k) <= depots_capacity * build_depot(k)\n\n\t! Ogni route inizia da un magazzino\n\tforall(i in ROUTES_NUMBER, k in ROUTES_NUMBER)\n\t\tsum(j in CUSTOMERS_NUMBER) take_customer(i,j,k) <= 1\n\n\t! Ogni nodo ha solo 2 archi incidenti\n\tforall(j in POINTS_NUMBER, k in ROUTES_NUMBER)\n\t\tsum(i in POINTS_NUMBER) take_customer(i,j,k) = 2\n\n\t! Un veicolo non può da un magazzino andare ad un altro magazzino\n\tforall(k in ROUTES_NUMBER)\n\t\tsum(i in LOCATIONS_NUMBER, j in LOCATIONS_NUMBER) take_customer(i,j,k) = 0\n\n!FUNZIONE OBIETTIVO------------------------------------------------------------\n\n  \tCost := sum(i in LOCATIONS_NUMBER) (LOCATION_COST(i) * build_depot(i)) + sum(i in POINTS_NUMBER, j in POINTS_NUMBER, k in ROUTES_NUMBER) DISTANCE(i,j) * take_customer(i,j,k)\n\n\tminimize(Cost)\n\twriteln(\"Cost = \", getobjval)\n\n  \tminimize(XPRS_LIN, Cost)\n  \twriteln(\"Cost = \", getobjval)\n\n  \tforall(i in ROUTES_NUMBER) do\n\t\twrite(getsol(build_depot(i)))\n\t\twrite(' ')\n\tend-do\n\n\tforall(i in POINTS_NUMBER, j in POINTS_NUMBER, k in LOCATIONS_NUMBER) do\n\t\twrite(getsol(take_customer(i,j,k)))\n\t\twrite(' ')\n\tend-do\n\n  \t!draw_locations\n  \t!draw_customers\n\n!PROCEDURE--------------------------------------------------------------------\n\n(!\n\tprocedure draw_locations\n\t\tIVEerase\n\t\tIVEzoom(min(i in LOCATIONS_NUMBER) LOCATION_X(i)-10, min(i in LOCATIONS_NUMBER) LOCATION_Y(i)-10,\n\t\t\t\tmax(i in LOCATIONS_NUMBER) LOCATION_X(i)+10, max(i in LOCATIONS_NUMBER) LOCATION_Y(i)+10)\n\t\tlocations_plot := IVEaddplot(\"Locations\", IVE_RED)\n\t\tforall(i in LOCATIONS_NUMBER) IVEdrawpoint(locations_plot, LOCATION_X(i), LOCATION_Y(i));\n\tend-procedure\n\n\tprocedure draw_customers\n\t\tIVEzoom(min(i in CUSTOMERS_NUMBER) CUSTOMER_X(i)-10, min(i in CUSTOMERS_NUMBER) CUSTOMER_Y(i)-10,\n\t\t\t\tmax(i in CUSTOMERS_NUMBER) CUSTOMER_X(i)+10, max(i in CUSTOMERS_NUMBER) CUSTOMER_Y(i)+10)\n\t\tcustomers_plot := IVEaddplot(\"Customers\", IVE_BLACK)\n\t\tforall(i in CUSTOMERS_NUMBER) IVEdrawpoint(customers_plot, CUSTOMER_X(i), CUSTOMER_Y(i));\n\tend-procedure\n!)\n\nend-model\n","undoManager":{"mark":26,"position":26,"stack":[[{"start":{"row":20,"column":24},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":114},{"start":{"row":21,"column":0},"end":{"row":21,"column":3},"action":"insert","lines":["  \t"]}],[{"start":{"row":21,"column":3},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":115},{"start":{"row":22,"column":0},"end":{"row":22,"column":3},"action":"insert","lines":["  \t"]}],[{"start":{"row":22,"column":3},"end":{"row":22,"column":4},"action":"insert","lines":["m"],"id":116}],[{"start":{"row":22,"column":4},"end":{"row":22,"column":5},"action":"insert","lines":["a"],"id":117}],[{"start":{"row":22,"column":5},"end":{"row":22,"column":6},"action":"insert","lines":["x"],"id":118}],[{"start":{"row":22,"column":5},"end":{"row":22,"column":6},"action":"remove","lines":["x"],"id":119}],[{"start":{"row":22,"column":4},"end":{"row":22,"column":5},"action":"remove","lines":["a"],"id":120}],[{"start":{"row":22,"column":3},"end":{"row":22,"column":4},"action":"remove","lines":["m"],"id":121}],[{"start":{"row":22,"column":2},"end":{"row":22,"column":3},"action":"remove","lines":["\t"],"id":122}],[{"start":{"row":22,"column":1},"end":{"row":22,"column":2},"action":"remove","lines":[" "],"id":123}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":1},"action":"remove","lines":[" "],"id":124}],[{"start":{"row":21,"column":3},"end":{"row":22,"column":0},"action":"remove","lines":["",""],"id":125}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":3},"action":"remove","lines":["  \t"],"id":126}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":1},"action":"insert","lines":["\t"],"id":127}],[{"start":{"row":21,"column":1},"end":{"row":21,"column":2},"action":"insert","lines":["m"],"id":128}],[{"start":{"row":21,"column":2},"end":{"row":21,"column":3},"action":"insert","lines":["a"],"id":129}],[{"start":{"row":21,"column":3},"end":{"row":21,"column":4},"action":"insert","lines":["x"],"id":130}],[{"start":{"row":21,"column":4},"end":{"row":21,"column":5},"action":"insert","lines":[":"],"id":131}],[{"start":{"row":21,"column":4},"end":{"row":21,"column":5},"action":"remove","lines":[":"],"id":132}],[{"start":{"row":21,"column":4},"end":{"row":21,"column":5},"action":"insert","lines":["_"],"id":133}],[{"start":{"row":21,"column":5},"end":{"row":21,"column":6},"action":"insert","lines":["l"],"id":134}],[{"start":{"row":21,"column":6},"end":{"row":21,"column":7},"action":"insert","lines":["o"],"id":135}],[{"start":{"row":21,"column":7},"end":{"row":21,"column":8},"action":"insert","lines":["c"],"id":136}],[{"start":{"row":21,"column":8},"end":{"row":21,"column":9},"action":"insert","lines":["a"],"id":137}],[{"start":{"row":21,"column":9},"end":{"row":21,"column":10},"action":"insert","lines":["t"],"id":138}],[{"start":{"row":21,"column":10},"end":{"row":21,"column":11},"action":"insert","lines":["i"],"id":139}],[{"start":{"row":21,"column":11},"end":{"row":21,"column":12},"action":"insert","lines":["o"],"id":140}],[{"start":{"row":116,"column":9},"end":{"row":116,"column":10},"action":"remove","lines":[")"],"id":166}],[{"start":{"row":116,"column":9},"end":{"row":116,"column":10},"action":"remove","lines":["("],"id":166}],[{"start":{"row":116,"column":10},"end":{"row":116,"column":11},"action":"remove","lines":["z"],"id":167}],[{"start":{"row":116,"column":10},"end":{"row":116,"column":16},"action":"remove","lines":["linctr"],"id":168},{"start":{"row":116,"column":10},"end":{"row":116,"column":11},"action":"insert","lines":["z"]}],[{"start":{"row":116,"column":1},"end":{"row":116,"column":8},"action":"remove","lines":["maximiz"],"id":169},{"start":{"row":116,"column":1},"end":{"row":116,"column":17},"action":"insert","lines":["maximize(linctr)"]}],[{"start":{"row":116,"column":7},"end":{"row":116,"column":8},"action":"insert","lines":["z"],"id":170}],[{"start":{"row":116,"column":7},"end":{"row":116,"column":8},"action":"remove","lines":["z"],"id":171}],[{"start":{"row":116,"column":7},"end":{"row":116,"column":8},"action":"insert","lines":["z"],"id":172}],[{"start":{"row":116,"column":6},"end":{"row":116,"column":7},"action":"insert","lines":["i"],"id":173}],[{"start":{"row":116,"column":5},"end":{"row":116,"column":6},"action":"insert","lines":["m"],"id":174}],[{"start":{"row":116,"column":4},"end":{"row":116,"column":5},"action":"insert","lines":["i"],"id":175}],[{"start":{"row":116,"column":3},"end":{"row":116,"column":4},"action":"insert","lines":["x"],"id":176}],[{"start":{"row":116,"column":2},"end":{"row":116,"column":3},"action":"insert","lines":["a"],"id":177}],[{"start":{"row":116,"column":1},"end":{"row":116,"column":9},"action":"remove","lines":["minimize"],"id":178},{"start":{"row":116,"column":1},"end":{"row":116,"column":2},"action":"insert","lines":["m"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":4,"column":0},"end":{"row":4,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":44,"state":"start","mode":"plugins/fico.ide.language.mosel/mode/mosel"}},"timestamp":1652968258522}